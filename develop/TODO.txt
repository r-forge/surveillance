######################################################################
# List of things to fix or items for additional implementation.
#
# $Date$
######################################################################


#======================================================================
#======================================================================
# general
#======================================================================
#======================================================================

#Open
31/08/2023 maybe use Paul's gdiff package to watch for unexpected changes
           in example plots similar to archiving the -Ex.Rout file

#Done
21/08/2024 converting from Rcpp to C (size of libs: 2148 K -> 528 K)
17/03/2020 remove ancient algo.hhh and simHHH implementations
15/02/2019 remove deprecated functions
12/02/2019 format.Date(x, "%V") and "%G" work on Windows since R 3.1.0,
           so the isoWeekYear() helper function is no longer necessary
21/04/2011 incorporate a NAMESPACE :) (as of R 2.14.0 this is obligatory)
19/06/2012 move vignettes into a vignettes directory or create .Rinstignore
           (as of R 2.14.0 the preferred location for vignette sources is
            directory "vignettes" and not "inst/doc")
18/04/2013 Author@R field in the "DESCRIPTION" file.
10/05/2014 plot for sts objects which contains daily data as Date obj
07/09/2014 add a "units" argument to stsplot_time with default 1:nAreas


#======================================================================
#======================================================================
# sts
#======================================================================
#======================================================================

#Open
04/09/2024 provide methods for the standard generic window()

#Done
28/10/2021 default legend of stsplot_time1() should exclude unused slots
18/02/2019 add 'epoch=NULL' argument to sts() constructor and allow for
           Date input, triggering epochAsDate=TRUE
18/02/2019 revise binaryTS condition in aggregate.sts and [.sts
           maybe condition on rowSums(populationFrac)==1 originally
22/01/2018 autoplot.sts(): add population argument for incidence plots
19/01/2018 autoplot.sts(), i.e., ggplot2 variant (via tidy.sts)
29/11/2016 improve as.data.frame-method, e.g., epochInPeriod is wrong in:
           as.data.frame(sts(1:10, start=c(2001, 5)))
01/04/2016 implement "as.one=TRUE" for stsplot_time (see plot.disProg)
21/07/2015 initialize "epoch" as 1:nrow(observed) by default
21/07/2015 the need to set legend.opts=NULL for sts objects without
           alarm/upperbound info is not nice -> changed default in
           stsplot_time1 to do legend only if useful


#======================================================================
#======================================================================
# twinSIR
#======================================================================
#======================================================================

########
# Bugs
########

#Open
17/10/2014 should epidata[i,] drop individuals that have already experienced an
           Revent and are no longer atRiskY in the new first block?
           Individuals with atRiskY=0 in the first block are considered
	   initially infective...

#Won't fix
15/11/2017 The methods for "epidata" (e.g., summary and plot) ignore latent
    periods and assume tE = tI. Also no support for latent periods in
    simulate.twinSIR. twinSIR would also require amendments...

#Fixed
25/03/2011 intensityPlot in twinSIR does not work if there are initially
           infectious individuals (as in the hagelloch data)
07/08/2012 simulation does not work on the fitted Hagelloch data. More
           specifically, it does not work when there are no endemic covariates.
01/09/2014 osAIC computation by simulation does not work in some
           cases where estimated coefficient is small (global in Hagelloch):
           m <- twinSIR(~ household + local + global, data=hagelloch)
           AIC(m, nsim=10)   # sometimes this works, sometimes not (-> NA)
           Problems occur in the quadratic programming:
           Error in quadprog::solve.QP(Dmat = Winv, dvec = d, Amat = t(R), bvec = rep(0,  : 
             constraints are inconsistent, no solution!


###########
# Features
###########

#Open
05/04/2011 R0 calculations as for twinstim:
           how can we derive R0 in a twinSIR model? (-> Michael)

#Done
20/02/2019 replace foodata analysis by hagelloch data in examples
07/08/2012 animate using animation package for objects of type "epidata"



#======================================================================
#======================================================================
# twinstim
#======================================================================
#======================================================================

############
#Bug reports
############

#Fixed
29/07/2010>> Summary/print fuer twinstim Objekte, die mit do.call
             erzeugt worden sind scheint nicht zu funktionieren.
             Siehe analyses-joint fuer Beispiele.
30/07/2010-fix>> alist
30/07/2010>> imdepi$events@data -- see email
30/07/2010>> Fitting twinstim models with epidemic component given by:
             epidemic=~ 0 -- see email.
10/08/2010 computing the cumulative intensity function at the end of
           the fit is VERY slow if model contains siaf component.  E.g. for best
           model having siaf_1 it takes about 60-90 minutes while the fit takes 5
           minutes. Possible to fix this??
16/04/2011 Use of finetune=TRUE appears not to lead to convergence. How to fix
           this? -> try with new argument nCub.adaptive=FALSE
xx/07/2012 R0 on an object containing agegrp as a factor variable
           in the epidemic component apparently does not work.
           -> new R0 implementation
07/08/2012 Simulate on a twinstim object without siaf (i.e. siaf=NULL)
      	   does not work. -> seems to work now after a bunch of bug fixes
20/06/2017 ensure that isTRUE(all.equal(residuals(mysim2),
           surveillance:::residuals.twinstim(surveillance:::as.twinstim.simEpidataCS(mysim2))))
06/10/2017 don't set siaf/tiaf functions in the global environment (possible masking)
18/07/2019 add "xlevels" to the twinstim result and use it in R0.twinstim
           (and maybe elsewhere) to compute gammapred for 'newevents'.


##########
# Features
##########

- add tiaf.exponential(log = TRUE) to force a decay (usually expected)
- simulate.twinstim's gmax should be replaced by generalized tiaf$gmax(pars)
- type-specific iso-kernels (need example or test code)
- add 'tiles' as optional component of "epidataCS"
- as.epidataCS: "events" could be provided as an object of class ppx (which
  would include the window "W") or of class STIDF, then transform appropriately
  (but don't change "epidataCS" class definition).
  "stgrid" could be of class STFDF.
- allow for spatial "prehistory", i.e. events outside of W as possible sources
  in the epidemic component only, but otherwise not part of the likelihood
- marks<-.epidataCS(,add=TRUE): to add marks
- allow for type-specific endemic effects, i.e. interaction with type. ideas:
use "special", or extra argument typeSpecificEffects=c("(Intercept)",
"influenza0"), ... maybe we can just use the classical formula interface (":")?
- plot.epidataCS (spatial): optional tiles and optional aggregation (-> snapshot)
- animate.epidataCS: allow more customization of points, not only col (e.g.,
  smaller cex of removed points), and support decreasing infectious point cex?
  To get a time slider (!), we could set up a Shiny app via animate(, shiny=TRUE)
    shiny::runApp(list(ui=pageWithSidebar(...), server=function(input,output)))
  with default input$epidataCS the 'object' (but this is probably overkill)

# Done
06/08/2010 (sebastian): Lambda(t) function, i.e. cumulative intensity function
12/08/2010 (sebastian): speed-up calculation of tau importantly by only evaluating .siafInt(siafpars) once
08/11/2010 (sebastian): Implementation of simulation algorithm
05/04/2011 (sebastian): Plot method for epidataCS objects
08/04/2011 (michael): Implemented profile function as in twinSIR.
05/07/2012 (sebastian): intensityPlot as in twinSIR, i.e. on W integrated intensity (and its components) as a function of time, grouped by type
xx/07/2012 (sebastian): robustification of optim procedure by making it less
adaptive (nCub.adaptive can be set to FALSE)
xx/07/2012 (sebastian): Documentation of functions in Rd files; also update references (Biometrics)
15/08/2012 (sebastian): added support for fixed parameters
10/12/2012 (sebastian): intensityplot-method for simEpidataCS passing by
                        twinstim() with all parameters fixed
11/05/2013 (sebastian): allow for use of rgeos instead of gpclib for polygon operations
13/02/2014 (sebastian): implement step function support for interaction kernels
06/06/2016 (sebastian): determineSources() should be implemented in C and it
  should be avoided to compute the whole distance matrix. It is also wasteful to
  recompute the eventDists for every data permutation during epitest...
02/07/2019 (sebastian): implement siaf.powerlaw1(), i.e. with fixed sigma=1
30/04/2024 (sebastian): update.epidataCS(stgrid=)


#======================================================================
#======================================================================
# hhh4
#======================================================================
#======================================================================

#Open
17/11/2014 add checkNeighbourhood(..., strict=TRUE) for integer check
18/10/2017 plotHHH4_season: add options for groups and confidence intervals (from hhh4contacts)
26/03/2019 maybe incorporate HIDDA.forecasting::dhhh4sims(), with scores
17/03/2020 return means from simHHH4 and export similar to old simHHH
28/02/2023 interaction terms currently need to be set up manually, because
           checkFormula()/fe() does not use model.matrix() capabilities.

#Done
08/09/2024 update(S =) should warn when the component was ~-1 (and add the intercept)
06/09/2024 implement residuals(type = "pearson") for JB's sake
20/03/2023 updateParams_nlm() loses coef names
09/02/2022 investigate handling of NA's in observed (checkderiv, etc.)
17/11/2021 illustrate simulate beyond sts (with missing observed)
20/02/2019 clarify ranef description in vignette("hhh4_spacetime")
12/02/2019 scores.oneStepAhead: remove the message concerning 'reverse'
22/01/2018 implement [.hhh4sims (from [.hhh4simslist)
19/01/2018 refer to scoringRules package, especially for scores.hhh4sims (logs)
19/01/2018 scores.oneStepAhead: change to reverse=FALSE, remove warnings
19/01/2018 plotHHH4sims_fan should make use of fanplot()
19/09/2016 nicer time axis for plot.hhh4 (maybe use xaxis feature of stsplot_time)
23/06/2016 fitting NegBin models on non-overdispersed data fails, e.g.:
           set.seed(1); hhh4(poists <- sts(rpois(104, 5)), list(family="NegBin1")); plot(poists)
           A more informative warning message hinting on overdisp would be nice
March 2015 update examples on help pages according to JSS paper
March 2015 update vignette("hhh4") according to JSS paper
16/12/2014 make update.hhh4(..., use.estimates=TRUE) generally useable
- add documentation for oneStepAhead predictions/scores
- improve and document plot/predict methods
- remove redundant elements in control/stsObj/terms to reduce the
  size of ah4-objects
- add documentation for parametric neighbourhood weights


#======================================================================
#======================================================================
# outbreak detection
#======================================================================
#======================================================================

- Problem plot if populationFrac=proportion


#======================================================================
#======================================================================
# back-projection
#======================================================================
#======================================================================


#======================================================================
#======================================================================
# nowcast
#======================================================================
#======================================================================

06/11/2016 in example(nowcast, run.dontrun=TRUE), rjags::jags.model warns
           about unused variables "alpha.lambda" and "beta.lambda" in data
           (unused if ddcp$logLambda != "iidLogGa")
26/07/2012 Estimation of delay function taking right-censoring into account
           plot(nc, type="delay") is not documented/exemplified at all
